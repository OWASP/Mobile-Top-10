---

layout: col-sidebar
title: "M9: 不當的會話處理"
---

# 威脅主體

**應用層面 特定**

有權存取 HTTP/S 流量、cookie 資料等的任何人或任何行動應用程式。 

# 攻擊媒介	

**利用難度 簡單**

攻擊媒介包括對裝置的實體存取、網路流量擷取或行動裝置上的惡意軟體。 

# 安全層面的強度	

**普及性 常見** <br />
**偵測性 簡單**

為了促進使用者和行動應用程式的後端伺服器之間的有狀態交易，行動應用程式使用會話令牌並透過 HTTP 或 SOAP 等無狀態協定來維護狀態。為了維護狀態，行動應用程式必須先透過後端來對使用者進行身份驗證。為了回應成功的身份驗證，伺服器向行動應用程式發出會話 cookie。行動應用程式將此 cookie 新增至行動應用程式和伺服器之間的所有未來服務交易。這使得伺服器可以方便地對行動應用程式發出的任何服務請求進行身份驗證和授權。當行動應用程式和後端伺服器之間的後續交易期間無意中與攻擊者共用會話令牌時，就會發生不正確的會話處理。

# 技術性影響	

**影響程度 嚴重**

有權存取會話令牌的攻擊者能夠透過將令牌提交到後端伺服器進行任何敏感交易來冒充使用者。因此，技術影響取決於誰被冒充以及其所要求的服務。

在最壞的情況下，攻擊者會冒充管理使用者並發出對危險的管理功能的請求。

在一般情況下，使用者會失去對其帳戶以及代表他們執行授權功能的人的控制。

# 業務影響
	
**應用程式/業務 特定** 
		
不正確的會話處理會導致攻擊者冒充其他使用者並代替他們執行業務功能。 這可能會導致:

- 欺詐;
- 訊息竊盜; 
- 業務中斷

# 我是否容易受到「不當的會話處理」的攻擊？

此類別涉及會話處理以及不安全地執行它的各種方式。

不正確的會話處理通常會導致與不良身份驗證相同的結果。一旦您通過身份驗證並獲得會話，該會話就允許存取行動應用程式。行動應用程式程式碼必須像其身份驗證機制一樣仔細地保護使用者會話。

以下是一些常見不正確的做法的範例:

**無法使後端會話失效**

許多開發人員讓在行動應用程式上的會話無效，而不是在伺服器端使會話無效，這為使用 HTTP 操縱工具的攻擊者留下了很大的機會。確保所有會話失效事件都在伺服器端執行，而不僅僅是在行動應用程式上執行。

**缺乏足夠的逾時保護**

您創建的任何行動應用程式都必須在後端元件上具有足夠的逾時保護。這有助於防止未經授權的使用者惡意存取現有會話並取得該使用者的角色。

根據應用程式的敏感度、自身風險狀況等，良好的逾時期限有很大差異，但一些好的指導原則是：

- 高安全性應用程式 15 分鐘
- 中安全性應用程式 30 分鐘
- 低安全性應用程式 1 小時

由於使用者與行動應用程式互動的性質，允許行動應用程式會話具有較長逾時值的趨勢越來越明顯。通常，使用者在使用行動應用程式時會同時執行許多操作。與傳統網路應用程式相比，互動往往是零星的、不可預測的，並且持續的時間更長。在某些方面，需要更長的逾時會話是有道理的，因為互動之間的間隔可能更長。但是，如果會話處理不當，會話逾時視窗的增加將增加會話被竊取的風險。重要的是向當權者提出這種風險，以確保會話處理得到正確處理。

**未能正確轉換 Cookie**

會話管理實作的另一個主要問題是在身份驗證狀態變更期間無法正確重置 cookie。身份驗證狀態變更包括以下事件:

- 從匿名用戶切換到登入用戶
- 從任何登入用戶切換到另一個登入用戶
- 從普通用戶切換到特權用戶
- 逾時

對於每種事件類型，最重要的是會話在伺服器端被銷毀，並且作為先前會話的一部分所提供的 cookie 不再被接受。理想情況下，您的應用程式甚至會偵測到上述 cookie 的任何使用情況，並將其報告給相應的安全團隊。

**不安全的令牌創建**

除了在關鍵應用程式事件期間正確使令牌（在伺服器端）失效之外，正確產生令牌本身也很重要。就像加密演算法一樣，開發人員應該使用完善的行業標準方法來創建令牌。它們應該足夠長、複雜且偽隨機，以抵抗猜測/預期攻擊。

# 如何防止「不當的會話處理」？

若要正確處理會話，請確保行動應用程式程式碼在使用者行動應用程式會話的生命週期中正確建立、維護和銷毀會話令牌。請遵循上述建議。

# 攻擊情境舉例

無

# 參考資料

- OWASP
  - [OWASP](https://www.owasp.org/)
- External
  - [External References](http://cwe.mitre.org/)